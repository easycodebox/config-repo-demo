server:
  port: 8100
spring:
  http:
    encoding.force: true
logging:
  level:
    root: info
    # 输出OpenFeign日志
    com.easycodebox.demo.api: debug
    #org.springframework.security: debug
management:
  endpoint:
    health:
      # 测试使用，正式环境需要配置成 when_authorized
      show-details: always
  endpoints:
    web:
      exposure:
        # 测试使用 - 开放所有端口
        include: "*"
security:
  oauth2:
    resource:
      id: ${spring.application.name}
      jwt:
        key-uri: http://oauth.easycodebox.local:7500/oauth/token_key
eureka:
  instance:
    prefer-ip-address: true
hystrix:
  # Hystrix子线程共享SecurityContext，便于DefaultOAuth2FeignRequestInterceptor获取
  shareSecurityContext: true
  command:
    # default配置全局HystrixCommand
    default:
      # 配置HystrixCommand线程执行的超时时间，默认1000 - 自行调优
      execution.isolation.thread.timeoutInMilliseconds: 8000
ribbon:
  MaxAutoRetries: 0
  MaxAutoRetriesNextServer: 1
feign:
  hystrix:
    enabled: true
  compression:
    request:
      enabled: true
      min-request-size: 1024
    response:
      enabled: true
  client:
    config:
      default:
        loggerLevel: BASIC
        # 配置默认的连接超时时间，默认1000（Spring Cloud Ribbon提供的配置） - 自行调优
        connectTimeout: 1000
        # 配置默认的读超时时间，默认1000（Spring Cloud Ribbon提供的配置） - 自行调优
        readTimeout: 3000
        # 获取AccessToken存放于Feign的请求头中。首先会从容器中获取OAuth2FeignRequestInterceptor Bean，没有则尝试创建对象
        requestInterceptors: com.easycodebox.spring.cloud.oauth2.DefaultOAuth2FeignRequestInterceptor